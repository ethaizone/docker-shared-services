# PostgreSQL Configuration
# ========================
# Default values are provided in docker-compose.yml.
# Uncomment and modify these lines in your local .env file for custom values.
# POSTGRES_VERSION=15-alpine
# POSTGRES_DB_NAME=mydatabase
# POSTGRES_USER=user
# POSTGRES_PASSWORD=password_for_dev_env

# Redis Configuration
# ===================
# Default values are provided in docker-compose.yml.
# Uncomment and modify these lines in your local .env file for custom values.
# REDIS_VERSION=7-alpine

# MongoDB Configuration
# =====================
# Default values are provided in docker-compose.yml.
# Uncomment and modify these lines in your local .env file for custom values.
# MONGO_VERSION=6.0
# MONGO_INITDB_ROOT_USERNAME=mongouser
# MONGO_INITDB_ROOT_PASSWORD=mongopassword
# MONGO_INITDB_DATABASE=admin # The database to create the root user in

# MySQL Configuration
# ===================
# Default values are provided in docker-compose.yml.
# Uncomment and modify these lines in your local .env file for custom values.
# MYSQL_VERSION=8.0
# MYSQL_ROOT_PASSWORD=rootpassword
# MYSQL_DATABASE_NAME=mydatabase
# MYSQL_USER=user
# MYSQL_PASSWORD=password_for_dev_env

# --- BACKUP SETTINGS ---
# Directory on your host machine where backups will be stored.
# Ensure this directory exists before running backup scripts.
BACKUP_DIR="${HOME}/docker_shared_backups"

# How many days to retain local backup files (e.g., 7 for one week)
BACKUP_RETENTION_DAYS=7

# --- IMPORTANT ---
# Create a file named '.env' in this directory.
# Copy the contents of this '.env.sample' file into your new '.env' file.
# Customize the values in your '.env' file as needed for your local setup.
# The '.env' file is ignored by Git to prevent sensitive information from being committed.